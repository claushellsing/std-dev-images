version: '3'

services:
## GO ##############################################
  go:
    container_name: golang
    build:
      context: ./Dockerfiles/golang
    volumes:
     - ./../:/app

### COMPOSER ##############################################
  composer-laravel:
    build:
      context: ./Dockerfiles/composer-laravel
    volumes:
     - ./../:/app
     - ./Dockerfiles/composer-laravel/cache:/tmp/cache
    entrypoint:
     - tail
     - -f
     - /dev/null

### NGINX ##############################################
  nginx:
    build:
      context: ./Dockerfiles/nginx
    volumes:
     - ./DockerFiles/nginx:/etc/nginx/custom
     - ./../:/usr/share/nginx/
    ports:
     - "80:80"
    depends_on:
     - phpfpm
     - mysql
    networks:
     - backend

### MYSQL ##############################################
  mysql:
    image: 'mysql:8'
    command: --default-authentication-plugin=mysql_native_password
    ports:
     - '3399:3306'
    networks:
     - backend
    environment:
     - MYSQL_ROOT_PASSWORD=root

### PHP-FPM ##############################################
  phpfpm:
    working_dir: '/usr/share/nginx/'
    volumes:
     - ./../:/usr/share/nginx/
    ports:
     - "8181:8080"
    build:
      context: ./Dockerfiles/laradock-php-fpm
      args:
        - LARADOCK_PHP_VERSION=7.2
        - INSTALL_MYSQL_CLIENT=true
        - INSTALL_MYSQLI=true
        - INSTALL_KAFKA=true
    networks:
     - backend

### ADMINER ##############################################
  adminer:
    volumes:
     - ./../:/app
    image: adminer
    ports:
     - '8787:8080'
    networks:
     - backend

### NODE ##############################################

  vue-node:
    container_name: "vue-node"
    build:
      args:
        version: '8.15'
      context: ./Dockerfiles/node
    working_dir: /home/node/app
    volumes:
     - ./../:/home/node/app
    networks:
     - backend

### ZOOKEEPER ##########################################

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
     - backend

### KAFKA BROKER #######################################

  kafka:
    image: 'bitnami/kafka:latest'
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_LISTENERS=INTERNAL://0.0.0.0:9092
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT
      - ALLOW_ANONYMOUS_LOGIN=yes
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
    depends_on:
      - zookeeper
    volumes:
     - ./Dockerfiles/kafka/:/app
    networks:
     - backend

### KAFKA MANAGER #######################################
  kafka-manager:
    ports:
     - '9111:9000'
    environment:
     - 'ZK_HOSTS=zookeeper:2181'
    image: sheepkiller/kafka-manager
    networks:
     - backend

networks:
    backend:
        driver: bridge
    
   
